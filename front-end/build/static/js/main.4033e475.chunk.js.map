{"version":3,"sources":["images/2022/championship.JPG","images sync /^/.*/championship/.JPG$","images sync /^/.*/.JPG$","images/2022/1_1.JPG","images/2022/1_2.JPG","images/2022/1_3.JPG","images/2022/2_1.JPG","images/2022/2_2.JPG","images/2022/2_3.JPG","images/2022/3_1.JPG","images/2022/3_2.JPG","images/2022/3_3.JPG","images/2022/4_1.JPG","images/2022/4_2.JPG","images/2022/4_3.JPG","images/2022/5_1.JPG","images/2022/5_2.JPG","images/2022/5_3.JPG","images/2022/6_1.JPG","images/2022/6_2.JPG","images/2022/6_3.JPG","images/2023/1_1.JPG","images/2023/1_2.JPG","images/2023/1_3.JPG","images/2023/1_4.JPG","Constants.js","images/loading-icon.gif","callouts/CalloutBuilder.js","callouts/CalloutBuilderMock.js","callouts/CalloutFactory.js","Schedule.js","Standings.js","Results.js","PowerRankings.js","images/cancel-icon.png","Album.js","DataFormatter.js","DataContainer.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Constants","MOCK_API","SERVER_URL","COOKIE_USER_KEY","COOKIE_USERNAME_KEY","COOKIE_USER_EMAIL_KEY","COOKIE_HOURS_EXPIRATION","SCREEN_HOME","SCREEN_USER_PROFILE","SCREEN_POLL_SUMMARY","POLL_DISPLAY_ACTIVE","SCREEN_OPEN_POLL","SCREEN_POLL_RESULTS","RECENT_POLL_COOKIE_PREFIX","LOCAL_SUBMISSION_EXPIRATION","makeGetCallout","endpoint","params","isSecure","Promise","reject","paramString","reduce","previous","current","index","fetch","method","headers","then","response","ok","clone","json","data","console","dir","catch","error","log","errorObj","CalloutBuilder","key","season","CalloutBuilderMock","majorDimension","range","values","calloutBuilder","Schedule","props","accountInfoNavRef","React","createRef","state","getScheduleScreen","bind","loadingScreen","className","src","loadingIcon","alt","this","schedule","week","game","dates","cellPadding","cellspacing","getSingleScheduleTable","results","group","player","placement","length","displaySchedule","Component","Standings","getStandingsScreen","standings","tableRows","regularSeason","value","points","unshift","displayChampionship","championshipRows","championship","displayStandings","Results","getResultsScreen","PowerRankings","getPowerRankingsScreen","toggleActiveWeek","powerRankings","setState","rows","onClick","label","event","clickedWeek","target","dataset","name","rankings","displayWeekToggle","displayPowerRankings","Album","albumRef","largeImage","getAlbumScreen","hideImage","closeLargeImageDisplay","enlargeImage","getSingleWeekAlbum","album","image","imageFound","imageURL","toLowerCase","require","default","onError","cancelIcon","getLargeImageDisplay","displayAlbum","getNumberOfGamesPerWeek","scheduleResponse","numberOfRowsBetweenWeeks","i","includes","scoringRubric","DataContainer","displayTabsRef","seasonToggleRef","isLoading","displayedScreen","errors","toggleDisplay","toggleSeason","loadSchedule","loadPowerRankings","getSchedule","responseError","rowsBetweenWeeksInSpreadsheet","forEach","row","rowIndex","rowReference","push","placementRow","scheduleToUpdate","j","groupToUpdate","createScheduleObject","performance","standingsArray","sort","a","b","mostRecentPlacement","person","championshipArray","createStandingsObject","getPowerRankings","powerRankingsResponse","columnIndex","getPowerRankingsObjects","buttonName","querySelectorAll","tab","replace","displayOptions","previouslySelectedSeason","ref","getDisplayOptions","getCurrentDisplay","App","content","charset","href","rel","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4033e475.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/championship.b22b7f1e.JPG\";","var map = {\n\t\"./2022/championship.JPG\": 8\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","var map = {\n\t\"./2022/1_1.JPG\": 25,\n\t\"./2022/1_2.JPG\": 26,\n\t\"./2022/1_3.JPG\": 27,\n\t\"./2022/2_1.JPG\": 28,\n\t\"./2022/2_2.JPG\": 29,\n\t\"./2022/2_3.JPG\": 30,\n\t\"./2022/3_1.JPG\": 31,\n\t\"./2022/3_2.JPG\": 32,\n\t\"./2022/3_3.JPG\": 33,\n\t\"./2022/4_1.JPG\": 34,\n\t\"./2022/4_2.JPG\": 35,\n\t\"./2022/4_3.JPG\": 36,\n\t\"./2022/5_1.JPG\": 37,\n\t\"./2022/5_2.JPG\": 38,\n\t\"./2022/5_3.JPG\": 39,\n\t\"./2022/6_1.JPG\": 40,\n\t\"./2022/6_2.JPG\": 41,\n\t\"./2022/6_3.JPG\": 42,\n\t\"./2022/championship.JPG\": 8,\n\t\"./2023/1_1.JPG\": 43,\n\t\"./2023/1_2.JPG\": 44,\n\t\"./2023/1_3.JPG\": 45,\n\t\"./2023/1_4.JPG\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","export default __webpack_public_path__ + \"static/media/1_1.8db5a156.JPG\";","export default __webpack_public_path__ + \"static/media/1_2.e85e4f7a.JPG\";","export default __webpack_public_path__ + \"static/media/1_3.8e89f8b5.JPG\";","export default __webpack_public_path__ + \"static/media/2_1.c88cd567.JPG\";","export default __webpack_public_path__ + \"static/media/2_2.7b3d6186.JPG\";","export default __webpack_public_path__ + \"static/media/2_3.7424ef2d.JPG\";","export default __webpack_public_path__ + \"static/media/3_1.825bc243.JPG\";","export default __webpack_public_path__ + \"static/media/3_2.f42076e7.JPG\";","export default __webpack_public_path__ + \"static/media/3_3.9f18a508.JPG\";","export default __webpack_public_path__ + \"static/media/4_1.f2ef057a.JPG\";","export default __webpack_public_path__ + \"static/media/4_2.59594bf1.JPG\";","export default __webpack_public_path__ + \"static/media/4_3.39c5430b.JPG\";","export default __webpack_public_path__ + \"static/media/5_1.af2703e6.JPG\";","export default __webpack_public_path__ + \"static/media/5_2.e2e22da2.JPG\";","export default __webpack_public_path__ + \"static/media/5_3.80a4074a.JPG\";","export default __webpack_public_path__ + \"static/media/6_1.d1e68baf.JPG\";","export default __webpack_public_path__ + \"static/media/6_2.b00cda89.JPG\";","export default __webpack_public_path__ + \"static/media/6_3.82e2444e.JPG\";","export default __webpack_public_path__ + \"static/media/1_1.691f11d0.JPG\";","export default __webpack_public_path__ + \"static/media/1_2.6e95668a.JPG\";","export default __webpack_public_path__ + \"static/media/1_3.7a7373c9.JPG\";","export default __webpack_public_path__ + \"static/media/1_4.067bf07a.JPG\";","const Constants = {\r\n    \r\n    // MOCK_API: true, \r\n    // SERVER_URL: \"http://localhost:4001\",\r\n\r\n    MOCK_API: false, \r\n    SERVER_URL:  'https://6k70mthaui.execute-api.us-east-2.amazonaws.com',\r\n\r\n    COOKIE_USER_KEY: 'user',\r\n    COOKIE_USERNAME_KEY: 'username',\r\n    COOKIE_USER_EMAIL_KEY: 'email',\r\n    COOKIE_HOURS_EXPIRATION: 5,\r\n\r\n    SCREEN_HOME: \"Home\",\r\n    SCREEN_USER_PROFILE: \"User Profile\",\r\n    SCREEN_POLL_SUMMARY: \"Poll Summary\",\r\n    POLL_DISPLAY_ACTIVE: \"Open Poll\",\r\n    SCREEN_OPEN_POLL: \"Open Poll\",\r\n    SCREEN_POLL_RESULTS: \"Poll Complete\",\r\n    RECENT_POLL_COOKIE_PREFIX: \"recent-poll-\",\r\n    LOCAL_SUBMISSION_EXPIRATION: 24 * 14 //two weeks \r\n}\r\n\r\nexport default Constants;","export default __webpack_public_path__ + \"static/media/loading-icon.11c01773.gif\";","import Constants from \"../Constants\";\r\n// import CookieManager from \"../localstorage/CookieManager\";\r\n// let cookieManager = new CookieManager();\r\n\r\nclass CalloutBuilder {\r\n\r\n    getLeagueData(key){\r\n        return makeGetCallout(Constants.SERVER_URL + '/boardgameleague', {season: key}, true);\r\n    }\r\n    \r\n    getSchedule(key){\r\n        return makeGetCallout(Constants.SERVER_URL + '/schedule', {season: key}, true);\r\n    }\r\n    \r\n    getPowerRankings(key){\r\n        return makeGetCallout(Constants.SERVER_URL + '/powerRankings', {season: key}, true);\r\n    }\r\n    \r\n}\r\n\r\nfunction makeGetCallout(endpoint, params, isSecure){\r\n\r\n    return new Promise((resolve, reject) => {\r\n        \r\n        let paramString = Object.keys(params).reduce((previous, current, index) => {\r\n            return index === 0 ? '?' + current + '=' + params[current] : previous + '&' + current + '=' + params[current];\r\n        }, '?');\r\n\r\n        const url = endpoint + paramString;\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n            }\r\n        };\r\n        \r\n        // if(isSecure){\r\n        //     let token = cookieManager.getValue(Constants.COOKIE_USER_KEY);\r\n        //     if(token){\r\n        //         options.headers['x-access-token'] = cookieManager.getValue(Constants.COOKIE_USER_KEY);\r\n        //     }\r\n        // }\r\n\r\n        fetch(url, options).then(response => {\r\n            \r\n            if(response.ok){\r\n                response.clone().json().then(data => {\r\n                    console.dir(data);\r\n                    resolve(data);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                });\r\n            }else{\r\n                response.json().then((errorObj) => reject(errorObj));\r\n            }\r\n        }).catch(error => {\r\n            console.dir(error);\r\n            reject(error);\r\n        });\r\n    })\r\n}\r\n\r\nfunction makePostCallout(endpoint, body, isSecure){\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const url = endpoint;\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n        \r\n        // if(isSecure){\r\n        //     options.headers['x-access-token'] = cookieManager.getValue(Constants.COOKIE_USER_KEY);\r\n        // }\r\n\r\n        fetch(url, options).then(response => {\r\n            if(response.ok){\r\n                response.json().then(data => {\r\n                    console.dir(data);\r\n                    resolve(data);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                });\r\n\r\n            }else{\r\n                response.json().then((errorObj) => reject(errorObj));\r\n            }\r\n        }).catch(error => {\r\n            console.dir(error);\r\n            reject(error);\r\n        });\r\n    })\r\n}\r\n\r\nfunction makePatchCallout(endpoint, body, isSecure){\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const url = endpoint;\r\n        const options = {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n        \r\n        // if(isSecure){\r\n        //     options.headers['x-access-token'] = cookieManager.getValue(Constants.COOKIE_USER_KEY);\r\n        // }\r\n\r\n        fetch(url, options).then(response => {\r\n            if(response.ok){\r\n                response.json().then(data => {\r\n                    console.dir(data);\r\n                    resolve(data);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                });\r\n\r\n            }else{\r\n                response.json().then((errorObj) => reject(errorObj));\r\n            }\r\n        }).catch(error => {\r\n            console.dir(error);\r\n            reject(error);\r\n        });\r\n    })\r\n}\r\n\r\nexport default CalloutBuilder;","import CalloutBuilder from \"./CalloutBuilder\";\r\n\r\nclass CalloutBuilderMock extends CalloutBuilder{\r\n\r\n    getLeagueData(key){\r\n        return new Promise((resolve, reject) => {\r\n            resolve ({\"data\": \"data\"})\r\n        })\r\n    }\r\n\r\n    getSchedule(key){\r\n        return new Promise((resolve, reject) => {\r\n            resolve (\r\n                {\r\n                    \r\n                    majorDimension: \"ROWS\",\r\n                    range: \"'Schedule-2023'!A1:E1000\",\r\n                    values: [\r\n                        ['Week 1', 'Imhotep', '01/09 - 01/22'],\r\n                        ['Group 1', 'Michael', 'Richie', 'Nick', 'Luke'],\r\n                        ['Placing', '4', '2', '1', '3'],\r\n                        ['Group 2', 'Ashley', 'Allie', 'Rachel F', 'Carly'],\r\n                        ['Placing', '1', '4', '3', '2'],\r\n                        ['Group 3', 'Austin', 'Dan', 'Tyler', 'Jack'],\r\n                        ['Placing', '1', '2', '4', '3'],\r\n                        ['Group 4', 'Josh', 'Ryan', 'Rachel M', 'Steve'],\r\n                        ['Placing', '4', '3', '1', '2'],\r\n                        ['Week 2', 'Carcassonne', '01/23 - 02/05'],\r\n                        ['Group 1', 'Rachel M', 'Richie', 'Austin', 'Allie'],\r\n                        ['Placing'],\r\n                        ['Group 2', 'Steve', 'Tyler', 'Dan', 'Luke'],\r\n                        ['Placing'],\r\n                        ['Group 3', 'Michael', 'Ashley', 'Ryan', 'Jack'],\r\n                        ['Placing'],\r\n                        ['Group 4', 'Carly', 'Rachel F', 'Nick', 'Josh'],\r\n                        ['Placing'],\r\n                        ['Week 3', 'TBD', '02/06 - 02/19'],\r\n                        ['Group 1', 'Rachel M', 'Michael', 'Rachel F', 'Ryan'],\r\n                        ['Placing'],\r\n                        ['Group 2', 'Steve', 'Ashley', 'Carly', 'Austin'],\r\n                        ['Placing'],\r\n                        ['Group 3', 'Tyler', 'Richie', 'Josh', 'Luke'],\r\n                        ['Placing'],\r\n                        ['Group 4', 'Jack', 'Nick', 'Dan', 'Allie'],\r\n                        ['Placing'],\r\n                        ['Week 4', 'TBD', '02/20 - 03/05'],\r\n                        ['Group 1', 'Rachel M', 'Jack', 'Ashley', 'Nick'],\r\n                        ['Placing'],\r\n                        ['Group 2', 'Steve', 'Richie', 'Dan', 'Rachel F'],\r\n                        ['Placing'],\r\n                        ['Group 3', 'Tyler', 'Josh', 'Michael', 'Austin'],\r\n                        ['Placing'],\r\n                        ['Group 4', 'Allie', 'Luke', 'Carly', 'Ryan'],\r\n                        ['Placing'],\r\n                        ['Week 5', 'TBD', '03/06 - 03/19'],\r\n                        ['Group 1', 'Rachel M', 'Richie', 'Ashley', 'Dan'],\r\n                        ['Placing'],\r\n                        ['Group 2', 'Steve', 'Michael', 'Tyler', 'Luke'],\r\n                        ['Placing'],\r\n                        ['Group 3', 'Rachel F', 'Jack', 'Ryan', 'Nick'],\r\n                        ['Placing'],\r\n                        ['Group 4', 'Allie', 'Carly', 'Josh', 'Austin'],\r\n                        ['Placing'],\r\n                        ['Week 6', 'TBD', '03/20 - 04/02'],\r\n                        ['Group 1', 'Rachel M', 'Steve', 'Jack', 'Michael'],\r\n                        ['Placing'],\r\n                        ['Group 2', 'Dan', 'Carly', 'Nick', 'Austin'],\r\n                        ['Placing'],\r\n                        ['Group 3', 'Allie', 'Ryan', 'Josh', 'Luke'],\r\n                        ['Placing'],\r\n                        ['Group 4', 'Rachel F', 'Ashley', 'Tyler', 'Richie'],\r\n                        ['Placing']\r\n                    ]\r\n                }\r\n            )\r\n\r\n        })\r\n    }\r\n\r\n    getPowerRankings(key){\r\n        return new Promise((resolve, reject) => {\r\n            resolve (\r\n                {\r\n                    majorDimension: \"ROWS\",\r\n                    range: \"'PowerRankings-2023'!A1:G100\",\r\n                    values: [\r\n                        ['Preseason', 'Week 1'],\r\n                        ['Michael', 'Nick'],\r\n                        ['Nick', 'Richie'],\r\n                        ['Richie', 'Rachel M'],\r\n                        ['Luke', 'Austin'],\r\n                        ['Dan', 'Ashley'],\r\n                        ['Austin', 'Dan'],\r\n                        ['Ryan', 'Carly'],\r\n                        ['Rachel F', 'Steve'],\r\n                        ['Allie', 'Ryan'],\r\n                        ['Rachel M', 'Rachel F'],\r\n                        ['Ashley', 'Luke'],\r\n                        ['Steve', 'Jack'],\r\n                        ['Tyler', 'Tyler'],\r\n                        ['Jack', 'Allie'],\r\n                        ['Carly', 'Michael'],\r\n                        ['Josh', 'Josh']\r\n                    ]\r\n                }\r\n            )\r\n\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default CalloutBuilderMock;","import CalloutBuilder from \"./CalloutBuilder\";\r\nimport CalloutBuilderMock from \"./CalloutBuilderMock\";\r\nimport Constants from '../Constants';\r\n\r\nlet calloutBuilder = Constants.MOCK_API ? new CalloutBuilderMock : new CalloutBuilder();\r\n\r\nexport function getSchedule(key){\r\n    return calloutBuilder.getSchedule(key);\r\n}\r\n\r\nexport function getPowerRankings(key){\r\n    return calloutBuilder.getPowerRankings(key);\r\n}\r\n","import React from \"react\";\r\nimport './Schedule.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\n\r\n\r\nclass Schedule extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.accountInfoNavRef = React.createRef();\r\n        this.state = {};\r\n\r\n        this.getScheduleScreen = this.getScheduleScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this);  \r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n    displaySchedule(){\r\n        console.log(this.props.schedule);\r\n        if(this.props.schedule){\r\n            let scheduleDisplay = this.props.schedule.map(week => {\r\n                return (<>\r\n                    <div className=\"bgl-week-container\">\r\n                        <div className=\"bgl-week-header\">{week.week + ' - ' + week.game}</div>\r\n                        <div className=\"bgl-week-subheader\">{week.dates}</div>\r\n                        <div className=\"bgl-week-table-container\">\r\n                        <table className=\"bgl-week-table\" cellPadding=\"0\" cellspacing=\"0\">\r\n                            {this.getSingleScheduleTable(week)}\r\n                        </table>\r\n                        </div>        \r\n                    </div>\r\n                </>\r\n\r\n                )\r\n            });\r\n\r\n            \r\n            return scheduleDisplay;\r\n        }\r\n\r\n        return (<div>could not load schedule</div>);\r\n    }\r\n\r\n    getSingleScheduleTable(week){\r\n        return week.results.map((group, index) => {\r\n            return (\r\n                <>\r\n                    <tr className=\"bgl-table-row player-row\">\r\n                        <td className=\"bgl-table-title-cell\">Group {index + 1}</td>\r\n                        <td className=\"bgl-table-cell\">{group[0].player}</td>\r\n                        <td className=\"bgl-table-cell\">{group[1].player}</td>\r\n                        <td className=\"bgl-table-cell\">{group[2].player}</td>\r\n                        <td className=\"bgl-table-cell\">{group[3].player}</td>\r\n                    </tr>\r\n                    <tr className=\"bgl-table-row placement-row\">\r\n                        <td className=\"bgl-table-subtitle-cell\">Placement</td>\r\n                        <td className=\"bgl-table-placement-cell\">{group[0].placement}</td>\r\n                        <td className=\"bgl-table-placement-cell\">{group[1].placement}</td>\r\n                        <td className=\"bgl-table-placement-cell\">{group[2].placement}</td>\r\n                        <td className=\"bgl-table-placement-cell\">{group[3].placement}</td>\r\n                    </tr>\r\n                </>\r\n            )\r\n        })\r\n    }\r\n\r\n    getScheduleScreen(){\r\n        if(this.props.schedule && this.props.schedule.length > 0){\r\n            return (<div>{this.displaySchedule()}</div>)\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the schedule</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getScheduleScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule;\r\n","import React from \"react\";\r\nimport './Standings.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\n\r\n\r\nclass Standings extends React.Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.accountInfoNavRef = React.createRef();\r\n        this.state = {};\r\n\r\n        this.getStandingsScreen = this.getStandingsScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this);  \r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n    displayStandings(){\r\n        \r\n        if(this.props.standings){\r\n            let tableRows = this.props.standings.regularSeason.map((value, index) => {\r\n                return (\r\n                    <tr className=\"bgl-row\">\r\n                        <td className=\"bgl-standings-cell\">{value.placement}</td>\r\n                        <td className=\"bgl-standings-cell\">{value.player}</td>\r\n                        <td className=\"bgl-standings-cell\">{value.points}</td>\r\n                    </tr>\r\n                )\r\n            });\r\n\r\n            tableRows.unshift((<tr>\r\n                <td className=\"standings-row-header\">Position</td>\r\n                <td className=\"standings-row-header\">Player</td>\r\n                <td className=\"standings-row-header\">Points</td>\r\n            </tr>))\r\n\r\n            return (\r\n                <>\r\n                    {this.displayChampionship()}\r\n                    <div className=\"power-ranking-header\">BGL {this.props.season} Regular Season</div>\r\n                    <div className=\"bgl-table-container\">\r\n                        <table className=\"bgl-table\">{tableRows}</table>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    displayChampionship(){\r\n        if(this.props.standings){\r\n            let championshipRows = [];\r\n            if(this.props.standings.championship && this.props.standings.championship.length > 0){\r\n                championshipRows = this.props.standings.championship.map((value, index) => {\r\n                    return (\r\n                        <tr className=\"bgl-row\">\r\n                            <td className=\"bgl-standings-cell\">{index + 1}</td>\r\n                            <td className=\"bgl-standings-cell\">{value.player}</td>\r\n                            <td className=\"bgl-standings-cell\">{value.points}</td>\r\n                        </tr>\r\n                    )\r\n                });\r\n    \r\n                championshipRows.unshift((<tr>\r\n                    <td className=\"standings-row-header\">Position</td>\r\n                    <td className=\"standings-row-header\">Player</td>\r\n                    <td className=\"standings-row-header\">Points</td>\r\n                </tr>))\r\n\r\n                return (<>\r\n                    <div className=\"power-ranking-header\">BGL {this.props.season} Final Standings</div>\r\n                    <div className=\"bgl-table-container\">\r\n                        <table className=\"bgl-table\">{championshipRows}</table>\r\n                    </div>\r\n                </>)\r\n\r\n            }\r\n        }\r\n        return (<></>);\r\n    }\r\n\r\n    getStandingsScreen(){\r\n        if(this.props.standings?.regularSeason){\r\n            return this.displayStandings();\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the standings</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getStandingsScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Standings;\r\n","import React from \"react\";\r\nimport './Results.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\n\r\n\r\nclass Results extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.accountInfoNavRef = React.createRef();\r\n        this.state = {};\r\n\r\n        this.getResultsScreen = this.getResultsScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this);  \r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n\r\n    getResultsScreen(){\r\n        if(this.props.results){\r\n            return (<div>Showing results table</div>)\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the results</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getResultsScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport './PowerRankings.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\n\r\n\r\nclass PowerRankings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.accountInfoNavRef = React.createRef();\r\n        this.state = {\r\n            week: 0,\r\n        };\r\n\r\n        this.getPowerRankingsScreen = this.getPowerRankingsScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this); \r\n        this.toggleActiveWeek = this.toggleActiveWeek.bind(this); \r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.powerRankings){\r\n            this.setState({\r\n                week: this.props.powerRankings.length - 1\r\n            });\r\n        }\r\n    }\r\n\r\n    displayWeekToggle(){\r\n        if(this.props.powerRankings.length > 1){\r\n            let rows = this.props.powerRankings.map((week, index) => {\r\n                let className = \"week-toggle-button\";\r\n                if(this.state.week == index){\r\n                    className += \" active\";\r\n                }\r\n                return (<div className={className} data-name={index} key={week.label} onClick={this.toggleActiveWeek}>{week.label}</div>)\r\n            })\r\n            return (\r\n                <div className=\"week-toggle-container\">\r\n                    {rows}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    toggleActiveWeek(event){\r\n        let clickedWeek = event.target.dataset.name;\r\n        this.setState({week: clickedWeek});\r\n    }\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n    displayPowerRankings(){\r\n        \r\n        if(this.props.powerRankings){\r\n            let tableRows = this.props.powerRankings[this.state.week].rankings.map((value, index) => {\r\n                return (\r\n                    <tr className=\"bgl-row\">\r\n                        <td className=\"bgl-power-cell\">{index + 1}</td>\r\n                        <td className=\"bgl-power-cell\">{value}</td>\r\n                    </tr>\r\n                )\r\n            });\r\n\r\n            return (\r\n                <>\r\n                    <div className=\"power-ranking-header\">BGL {this.props.season} Power Rankings</div>\r\n                    <div className=\"bgl-table-container\">\r\n                        <table className=\"bgl-table\">{tableRows}</table>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getPowerRankingsScreen(){\r\n        if(this.props.powerRankings){\r\n            let display = [this.displayWeekToggle(), this.displayPowerRankings()];\r\n            return display;\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the powerRankings</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getPowerRankingsScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PowerRankings;\r\n","export default __webpack_public_path__ + \"static/media/cancel-icon.b1fc8a4c.png\";","import React from \"react\";\r\nimport './Album.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\nimport cancelIcon from './images/cancel-icon.png';\r\n\r\n\r\nclass Album extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.albumRef = React.createRef();\r\n        this.state = {\r\n            largeImage: null\r\n        };\r\n\r\n        this.getAlbumScreen = this.getAlbumScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this);  \r\n        this.hideImage = this.hideImage.bind(this);  \r\n        this.closeLargeImageDisplay = this.closeLargeImageDisplay.bind(this);  \r\n        this.enlargeImage = this.enlargeImage.bind(this);  \r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n    displayAlbum(){\r\n        console.log(this.props.schedule);\r\n        if(this.props.schedule){\r\n            let albumDisplay = this.props.schedule.map(week => {\r\n                return (<>\r\n                    <div className=\"album-container\">\r\n                        <div className=\"bgl-week-header\">{week.week + ' - ' + week.game}</div>\r\n                        <div className=\"bgl-week-subheader\">{week.dates}</div>\r\n                        <div className=\"bgl-week-album-container\">\r\n                            {this.getSingleWeekAlbum(week, this.props.season)}\r\n                        </div>        \r\n                    </div>\r\n                </>\r\n\r\n                )\r\n            });\r\n\r\n            \r\n            return albumDisplay;\r\n        }\r\n\r\n        return (<div>could not load album</div>);\r\n    }\r\n\r\n    getSingleWeekAlbum(week, season){\r\n        return week.album.map((image, index) => {\r\n            let imageFound = true;\r\n            let imageURL = '';\r\n            try{\r\n                if(week.week.toLowerCase() === 'championship'){\r\n                    imageURL = require(\"./images/\" + season + '/' + 'championship' + '.JPG');\r\n                }else{\r\n                    imageURL = require(\"./images/\" + season + '/' + image + '.JPG');\r\n                }\r\n            }catch(error){\r\n                imageFound = false;\r\n            }\r\n            if(imageFound){\r\n                return (\r\n                    <>\r\n                        <div className=\"image-container\">\r\n                            <img className=\"gallery-image\" src={imageURL.default} onError={this.hideImage} onClick={this.enlargeImage}/>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n\r\n            return (<></>);\r\n        })\r\n    }\r\n\r\n    enlargeImage(event){\r\n        this.setState({\r\n            largeImage: event.target.src\r\n        })\r\n    }\r\n\r\n    hideImage(event){\r\n        event.target.className = 'hidden';\r\n    }\r\n\r\n    getLargeImageDisplay(){\r\n        if(this.state.largeImage !== null){\r\n            return (<div className=\"large-image-background\">\r\n                <div className=\"large-image-container\">\r\n                    <img src={cancelIcon} className=\"close-large-image-button\" onClick={this.closeLargeImageDisplay}></img>\r\n                    <div className=\"large-image-display\">\r\n                        <img className=\"focused-image\" src={this.state.largeImage} onClick={this.closeLargeImageDisplay}/>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    closeLargeImageDisplay(){\r\n        this.setState({\r\n            largeImage: null\r\n        })\r\n    }\r\n\r\n    getAlbumScreen(){\r\n        if(this.props.schedule){\r\n            return (<>\r\n            {this.getLargeImageDisplay()}\r\n            <div className=\"container\">{this.displayAlbum()}</div>\r\n            </>)\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the album</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getAlbumScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Album;\r\n","export function createScheduleObject(response) {\r\n    let numberOfGamesPerWeek = getNumberOfGamesPerWeek(response);\r\n    let numberOfPlayersPerGame = 4;\r\n    let infoHeaderRows = 1;\r\n    let rowsBetweenWeeksInSpreadsheet = numberOfGamesPerWeek * 2 + infoHeaderRows;\r\n    \r\n    let schedule = [];\r\n    response.values.forEach((row, rowIndex) => {\r\n        \r\n        let rowReference = rowIndex % rowsBetweenWeeksInSpreadsheet;\r\n        if(rowReference == 0){\r\n            schedule.push({\r\n                week: row[0], \r\n                game: row[1], \r\n                dates: row[2], \r\n                results: [],\r\n                album: []\r\n            });\r\n        }else if(rowReference % 2 === 1){\r\n            let placementRow = response.values[rowIndex + 1];\r\n            let scheduleToUpdate = schedule[schedule.length - 1];\r\n            scheduleToUpdate.results.push([]);\r\n            for(let j = 1; j <= numberOfPlayersPerGame; j++){\r\n                let groupToUpdate = scheduleToUpdate.results[scheduleToUpdate.results.length-1];\r\n                let placement = placementRow[j];\r\n                groupToUpdate.push({player: row[j], placement: placement})\r\n            }\r\n\r\n            if(scheduleToUpdate.results[0][0]?.placement){\r\n                \r\n                if(scheduleToUpdate.week === 'championship'){\r\n                    scheduleToUpdate.album.push('championship')\r\n                }else{\r\n                    scheduleToUpdate.album.push(schedule.length + '_' + scheduleToUpdate.results.length)\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return schedule;\r\n}\r\n\r\nfunction getNumberOfGamesPerWeek(scheduleResponse){\r\n    let numberOfRowsBetweenWeeks = 0;\r\n    if(scheduleResponse.values.length > 1){\r\n        for(let i = 1; i < scheduleResponse.values.length; i++){\r\n            let row = scheduleResponse.values[i];\r\n            if(row[0].toLowerCase().includes('week')){\r\n                break;\r\n            }else{\r\n                numberOfRowsBetweenWeeks++\r\n            }\r\n        }\r\n    }\r\n    return numberOfRowsBetweenWeeks/2;\r\n}\r\n\r\nexport function createStandingsObject(schedule){\r\n    let standings = {\r\n        regularSeason: {},\r\n        championship: {}\r\n    };\r\n    schedule.forEach(week=>{\r\n        if(week.week.toLowerCase() !== 'championship'){ \r\n            week.results.forEach(group => {\r\n                group.forEach(performance => {\r\n                    if(!standings.regularSeason[performance.player]){\r\n                        standings.regularSeason[performance.player] = 0;\r\n                    }\r\n                    if(performance.placement){\r\n                        standings.regularSeason[performance.player] += scoringRubric(performance.placement);\r\n                    }\r\n                })\r\n            })\r\n        }else{\r\n            week.results.forEach(group => {\r\n                group.forEach(performance => {\r\n                    if(!standings.championship[performance.player]){\r\n                        standings.championship[performance.player] = 0;\r\n                    }\r\n                    if(performance.placement){\r\n                        standings.championship[performance.player] += scoringRubric(performance.placement);\r\n                    }\r\n                })\r\n            })\r\n        }\r\n       \r\n    })\r\n    \r\n    //regular season sorting\r\n    let standingsArray = Object.keys(standings.regularSeason).map(player => {\r\n        return {player: player, points: standings.regularSeason[player]};\r\n    })\r\n    standingsArray.sort((a, b) => {\r\n        if(a.points > b.points) {\r\n            return -1;\r\n        }else{\r\n            return 1;\r\n        }\r\n    })\r\n\r\n    let mostRecentPlacement = 1;\r\n    standingsArray.forEach((person, index) => {\r\n        if(index === 0 || person.points !== standingsArray[index - 1].points){\r\n            person.placement = index + 1;\r\n            mostRecentPlacement = index + 1;\r\n        }else{\r\n            person.placement = mostRecentPlacement;\r\n        }\r\n    })\r\n\r\n    //championship sorting\r\n    let championshipArray = Object.keys(standings.championship).map(player => {\r\n        return {player: player, points: standings.championship[player]};\r\n    })\r\n    championshipArray.sort((a, b) => {\r\n        if(a.points > b.points) {\r\n            return -1;\r\n        }else{\r\n            return 1;\r\n        }\r\n    })\r\n\r\n    standings.regularSeason = standingsArray;\r\n    standings.championship = championshipArray;\r\n    return standings;\r\n}\r\n\r\nfunction scoringRubric(placement){\r\n if(placement == 1){\r\n     return 3;\r\n }else if(placement == 2){\r\n     return 2;\r\n }else if(placement == 3){\r\n     return 1;\r\n }\r\n return 0;\r\n}\r\n\r\nexport function getImageFileNamesToLoad(schedule, response){\r\n    let mostPossibleImages = 0;\r\n    let championshipPlayed = false;\r\n    schedule.forEach(week=>{\r\n        if(week.week.toLowerCase() !== 'championship'){ \r\n            week.results.forEach(group => {\r\n                let performance = group[0];\r\n                if(performance?.placement){\r\n                    mostPossibleImages++;\r\n                }\r\n            })\r\n        }else{\r\n            week.results.forEach(group => {\r\n                let performance = group[0];\r\n                if(performance?.placement){\r\n                    championshipPlayed = true;\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    let numberOfGamesPerWeek = getNumberOfGamesPerWeek(response);\r\n\r\n    let imageNames= [];\r\n    let week = 1;\r\n    for(let i = 0; i < mostPossibleImages; i++){\r\n        let imageName = null;\r\n        if(championshipPlayed && i === mostPossibleImages-1){\r\n            imageName = 'championship';\r\n        }else{\r\n            let imageNumberForWeek = (i % numberOfGamesPerWeek) + 1;\r\n            imageName = week + '_' + imageNumberForWeek;\r\n            if(imageNumberForWeek === numberOfGamesPerWeek-1){\r\n                week++;\r\n            }\r\n        }\r\n\r\n        if(imageNames.length < week){\r\n            imageNames[week-1] = [];\r\n        }\r\n        imageNames[week-1].push(imageName);\r\n    }\r\n\r\n    return imageNames\r\n    \r\n}\r\n\r\nexport function getPowerRankingsObjects(powerRankingsResponse){\r\n    let powerRankings = [];\r\n    if(powerRankingsResponse.values.length > 1){\r\n\r\n        powerRankingsResponse.values.forEach((row, rowIndex) => {\r\n            row.forEach((value, columnIndex)=>{\r\n                if(rowIndex === 0){\r\n                    powerRankings.push({\r\n                        label: value,\r\n                        rankings: []\r\n                    })\r\n                }else{\r\n                    powerRankings[columnIndex].rankings.push(value);\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return powerRankings;\r\n}","import React from \"react\";\r\n// import InputBox from './InputBox';\r\nimport Constants from \"./Constants\";\r\nimport './DataContainer.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\nimport {getPowerRankings, getSchedule } from \"./callouts/CalloutFactory\";\r\nimport Schedule from \"./Schedule\";\r\nimport Standings from \"./Standings\";\r\nimport Results from \"./Results\";\r\nimport PowerRankings from \"./PowerRankings\";\r\nimport Album from \"./Album\";\r\nimport { createScheduleObject, createStandingsObject, getImageFileNamesToLoad, getPowerRankingsObjects } from \"./DataFormatter\";\r\n\r\nclass DataContainer extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n\r\n        this.displayTabsRef = React.createRef();     \r\n        this.seasonToggleRef = React.createRef();   \r\n        this.state = {\r\n            isLoading: true,\r\n            schedule: [],\r\n            results: {},\r\n            powerRankings: {},\r\n            standings: {},\r\n            album: [],\r\n            displayedScreen: 'schedule',\r\n            season: 2023,\r\n            errors:{\r\n                schedule: null,\r\n                results: null,\r\n                powerRankings: null,\r\n                standings: null,\r\n                album: null\r\n            }\r\n        };\r\n\r\n        // this.loadSchedule = this.loadSchedule.bind(this);\r\n        // this.loadPowerRankings = this.loadPowerRankings.bind(this);\r\n        // this.loadResults = this.loadResults.bind(this);\r\n        // this.loadStandings = this.loadStandings.bind(this);\r\n        // this.getCurrentDisplay = this.getCurrentDisplay.bind(this);\r\n        this.toggleDisplay = this.toggleDisplay.bind(this);\r\n        this.toggleSeason = this.toggleSeason.bind(this);\r\n           \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadSchedule(this.state.season);\r\n        this.loadPowerRankings(this.state.season);\r\n        // this.loadResults();\r\n        // this.loadStandings();\r\n    }\r\n\r\n\r\n    // schedule = [\r\n    //     {\r\n    //         week: 1, \r\n    //         game: 'Imhotep', \r\n    //         dates: '1/9-1/22', \r\n    //         results: [\r\n    //             [\r\n    //                 {player: 'nick': placement: 1},\r\n    //                 {player:'michael': placement: 4},\r\n    //                 {player:'richie': placement: 2},\r\n    //                 {player:'luke': placement: 3}\r\n    //             ]\r\n                \r\n    //         ], \r\n    //         finished: true\r\n    //     }\r\n    //     {\r\n    //         week: 2,\r\n    //         game: 'TBD',\r\n    //         dates: '1/23-2/5', \r\n    //         results: [{players:, ], \r\n    //         finished: true\r\n    //     }\r\n    // ]\r\n    //static schedule (may include results here as well?)\r\n    loadSchedule(season){\r\n        getSchedule(season).then(response => {\r\n\r\n            if(response.code === 400){\r\n                let responseError = this.state.errors;\r\n                responseError.schedule = 'Schedule info do not exist for this season';\r\n                \r\n                this.setState({\r\n                    errors: responseError,\r\n                    schedule: null,\r\n                    standings: null\r\n                });\r\n                console.log(response.code);\r\n                console.log('Could not load power rankings');\r\n            }else{\r\n                let schedule = createScheduleObject(response);\r\n                let standings = createStandingsObject(schedule);\r\n                // let album = getImageFileNamesToLoad(schedule, response);\r\n                \r\n                this.setState({\r\n                    schedule: schedule,\r\n                    standings: standings\r\n                });\r\n            }\r\n\r\n\r\n        }).catch(error => {\r\n            let responseError = this.state.errors;\r\n            responseError.schedule = error;\r\n            this.setState({\r\n                errors: responseError,\r\n                schedule: null,\r\n                standings: null,\r\n                album: null\r\n            });\r\n            console.log(error.code);\r\n            console.log('Could not load schedule');\r\n        });\r\n    }\r\n\r\n    //static list created by admin\r\n    loadPowerRankings(season){\r\n        getPowerRankings(season).then(response => {\r\n            if(response.code === 400){\r\n                let responseError = this.state.errors;\r\n                responseError.powerRankings = 'Power Rankings do not exist for this season';\r\n\r\n                this.setState({\r\n                    errors: responseError,\r\n                    powerRankings: null\r\n                });\r\n                console.log(response.code);\r\n                console.log('Could not load power rankings');\r\n            }else{\r\n                let powerRankings = getPowerRankingsObjects(response)\r\n                this.setState({\r\n                    powerRankings: powerRankings,\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            let responseError = this.state.errors;\r\n            responseError.powerRankings = error;\r\n            this.setState({\r\n                errors: responseError,\r\n                powerRankings: null\r\n            });\r\n            console.log(error.code);\r\n            console.log('Could not load power rankings');\r\n        });\r\n\r\n    }\r\n\r\n    getCurrentDisplay(){\r\n        if(this.state.displayedScreen === 'schedule'){\r\n            return (<Schedule schedule={this.state.schedule} error={this.state.errors.schedule}></Schedule>);\r\n        } else if(this.state.displayedScreen === 'powerRankings'){\r\n            return (<PowerRankings season={this.state.season} powerRankings={this.state.powerRankings} error={this.state.errors.powerRankings}></PowerRankings>);\r\n        } else if(this.state.displayedScreen === 'results'){\r\n            return (<Results schedule={this.state.schedule} error={this.state.errors.results}></Results>);\r\n        } else if(this.state.displayedScreen === 'standings'){\r\n            return (<Standings season={this.state.season} standings={this.state.standings} error={this.state.errors.standings}></Standings>);\r\n        } else if(this.state.displayedScreen === 'album'){\r\n            return (<Album season={this.state.season} schedule={this.state.schedule} error={this.state.errors.album}></Album>);\r\n        } else {\r\n            return (<Schedule schedule={this.state.schedule} error={this.state.errors.schedule}></Schedule>);\r\n        }\r\n            \r\n    }\r\n\r\n    toggleDisplay(event){\r\n        let buttonName = event.target.dataset.name;\r\n        this.setState({\r\n            displayedScreen: buttonName\r\n        })\r\n        let displayTabs = this.displayTabsRef.current.querySelectorAll('.toggle-button');\r\n        displayTabs.forEach((tab) => {\r\n            if(tab.className.includes(' active')){\r\n                tab.className = tab.className.replace(' active', '');\r\n            }\r\n      \r\n            if(tab.dataset.name === buttonName){\r\n                tab.className += ' active';\r\n            }\r\n        })\r\n    }\r\n\r\n    getDisplayOptions(){\r\n        let displayOptions = [];\r\n        if(this.state.schedule){\r\n            \r\n            displayOptions.push((<div data-name=\"schedule\" className=\"toggle-button active\" onClick={this.toggleDisplay}>Schedule</div>));\r\n            displayOptions.push((<div data-name=\"standings\" className=\"toggle-button\" onClick={this.toggleDisplay}>Standings</div>));\r\n        }\r\n\r\n        if(this.state.powerRankings){\r\n            displayOptions.push((<div data-name=\"powerRankings\" className=\"toggle-button\" onClick={this.toggleDisplay}>Power Rankings</div>));\r\n        }\r\n\r\n        if(this.state.album){\r\n            displayOptions.push((<div data-name=\"album\" className=\"toggle-button\" onClick={this.toggleDisplay}>Album</div>));\r\n        }\r\n        return displayOptions;\r\n    }\r\n\r\n    toggleSeason(event){\r\n        let buttonName = event.target.dataset.name;\r\n\r\n        let seasonTabs = this.seasonToggleRef.current.querySelectorAll('.season-button');\r\n        seasonTabs.forEach((tab) => {\r\n            if(tab.className.includes(' active')){\r\n                tab.className = tab.className.replace(' active', '');\r\n            }\r\n      \r\n            if(tab.dataset.name === buttonName){\r\n                tab.className += ' active';\r\n            }\r\n        });\r\n\r\n        let previouslySelectedSeason = this.state.season;\r\n        if(buttonName != previouslySelectedSeason){\r\n            this.setState({\r\n                season: buttonName\r\n            })\r\n\r\n            this.loadSchedule(buttonName);\r\n            this.loadPowerRankings(buttonName);\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <>\r\n            <div className=\"season-toggle\" ref={this.seasonToggleRef}>\r\n                <div data-name=\"2023\" className=\"season-button active\" onClick={this.toggleSeason}>2023</div>\r\n                <div data-name=\"2022\" className=\"season-button\" onClick={this.toggleSeason}>2022</div>\r\n            </div>\r\n            <div className=\"bgl-header\">Board Game League</div>\r\n            <div className=\"display-tabs\" ref={this.displayTabsRef}>\r\n                {this.getDisplayOptions()}\r\n            </div>\r\n            {this.getCurrentDisplay()}                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataContainer;\r\n","import React from \"react\";\r\nimport './App.css';\r\n// import AppContainer from \"./create/AppContainer\";\r\n//import { BrowserRouter as Router,Routes, Route, Link } from 'react-router-dom';\r\n// import ViewOnlyAppContainer from \"./view/ViewOnlyAppContainer\";\r\n// import VerifyEmailContainer from \"./verifyEmail/VerifyEmailContainer\";\r\n// import LandingNav from \"./landing/LandingNavigation\";\r\nimport DataContainer from \"./DataContainer\";\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n\r\n  }\r\n\r\n  render(){\r\n \r\n    return (\r\n    <>\r\n    \r\n    <head>\r\n          <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'/>\r\n          <meta charset=\"utf-8\"/>\r\n          <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\r\n          <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'/>\r\n          <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\r\n          <link href='https://fonts.googleapis.com/css?family=Holtwood+One+SC' rel='stylesheet' type='text/css'/>\r\n          <link href='https://fonts.googleapis.com/css?family=Kaushan+Script|Herr+Von+Muellerhoff' rel='stylesheet' type='text/css'/>\r\n          <link href='https://fonts.googleapis.com/css?family=Abel' rel='stylesheet' type='text/css'/>\r\n          <link href='https://fonts.googleapis.com/css?family=Istok+Web|Roboto+Condensed:700' rel='stylesheet' type='text/css'/>\r\n            \r\n          <title>Board Game League</title>\r\n        </head>\r\n        \r\n        {/* <Router> */}\r\n           <div className=\"App main-container\">\r\n            <DataContainer></DataContainer>\r\n           {/* <Routes>\r\n                 <Route exact path='/' element={<LandingNav/>}></Route>\r\n                 <Route exact path='/view' element={< ViewOnlyAppContainer />}></Route>\r\n                 <Route exact path='/create' element={< AppContainer />}></Route>\r\n                 <Route exact path='/verify-email' element={< VerifyEmailContainer />}></Route>\r\n          </Routes> */}\r\n          </div>\r\n       {/* </Router> */}\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}