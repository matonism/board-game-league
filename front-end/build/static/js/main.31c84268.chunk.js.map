{"version":3,"sources":["Constants.js","images/loading-icon.gif","callouts/CalloutBuilder.js","callouts/CalloutBuilderMock.js","callouts/CalloutFactory.js","Schedule.js","Standings.js","Results.js","PowerRankings.js","DataContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Constants","MOCK_STORAGE","MOCK_API","HOST_URL","SERVER_URL","COOKIE_USER_KEY","COOKIE_USERNAME_KEY","COOKIE_USER_EMAIL_KEY","COOKIE_HOURS_EXPIRATION","SCREEN_HOME","SCREEN_USER_PROFILE","SCREEN_POLL_SUMMARY","POLL_DISPLAY_ACTIVE","SCREEN_OPEN_POLL","SCREEN_POLL_RESULTS","RECENT_POLL_COOKIE_PREFIX","LOCAL_SUBMISSION_EXPIRATION","makeGetCallout","endpoint","params","isSecure","Promise","resolve","reject","paramString","Object","keys","reduce","previous","current","index","fetch","method","headers","then","response","ok","clone","json","data","console","dir","catch","error","log","errorObj","CalloutBuilder","key","season","CalloutBuilderMock","calloutBuilder","Schedule","props","accountInfoNavRef","React","createRef","state","getScheduleScreen","bind","loadingScreen","className","src","loadingIcon","alt","this","schedule","map","week","game","dates","cellPadding","cellspacing","getSingleScheduleTable","results","group","player","placement","displaySchedule","Component","Standings","getStandingsScreen","standings","tableRows","value","points","unshift","displayStandings","Results","getResultsScreen","PowerRankings","getPowerRankingsScreen","powerRankings","values","displayPowerRankings","DataContainer","displayTabsRef","isLoading","displayedScreen","errors","loadSchedule","loadPowerRankings","loadResults","loadStandings","getCurrentDisplay","toggleDisplay","getSchedule","createScheduleObject","createStandingsObject","responseError","setState","code","getPowerRankings","getResults","getStandings","forEach","row","rowIndex","rowReference","numberOfGamesPerWeek","push","placementRow","scheduleToUpdate","length","j","groupToUpdate","performance","scoringRubric","standingsArray","sort","a","b","event","buttonName","target","dataset","name","querySelectorAll","tab","includes","replace","ref","onClick","App","content","charset","href","rel","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31c84268.chunk.js","sourcesContent":["const Constants = {\r\n    MOCK_STORAGE: false,\r\n    MOCK_API: false, \r\n    // MOCK_STORAGE: true,\r\n    // MOCK_API: true, \r\n    // SERVER_URL: \"http://localhost:4001\",\r\n    HOST_URL: \"http://localhost:3000\",\r\n    SERVER_URL:  'https://6k70mthaui.execute-api.us-east-2.amazonaws.com',\r\n    // HOST_URL: \"https://brackset.com\",\r\n    // HOST_URL: \"http://bracket-generator.s3-website.us-east-2.amazonaws.com\",\r\n\r\n    COOKIE_USER_KEY: 'user',\r\n    COOKIE_USERNAME_KEY: 'username',\r\n    COOKIE_USER_EMAIL_KEY: 'email',\r\n    COOKIE_HOURS_EXPIRATION: 5,\r\n\r\n    SCREEN_HOME: \"Home\",\r\n    SCREEN_USER_PROFILE: \"User Profile\",\r\n    SCREEN_POLL_SUMMARY: \"Poll Summary\",\r\n    POLL_DISPLAY_ACTIVE: \"Open Poll\",\r\n    SCREEN_OPEN_POLL: \"Open Poll\",\r\n    SCREEN_POLL_RESULTS: \"Poll Complete\",\r\n    RECENT_POLL_COOKIE_PREFIX: \"recent-poll-\",\r\n    LOCAL_SUBMISSION_EXPIRATION: 24 * 14 //two weeks \r\n}\r\n\r\nexport default Constants;","export default __webpack_public_path__ + \"static/media/loading-icon.11c01773.gif\";","import Constants from \"../Constants\";\r\n// import CookieManager from \"../localstorage/CookieManager\";\r\n// let cookieManager = new CookieManager();\r\n\r\nclass CalloutBuilder {\r\n\r\n    getLeagueData(key){\r\n        return makeGetCallout(Constants.SERVER_URL + '/boardgameleague', {season: key}, true);\r\n    }\r\n    \r\n    getSchedule(key){\r\n        return makeGetCallout(Constants.SERVER_URL + '/schedule', {season: key}, true);\r\n    }\r\n    \r\n    getPowerRankings(key){\r\n        return makeGetCallout(Constants.SERVER_URL + '/powerRankings', {season: key}, true);\r\n    }\r\n    \r\n    getStandings(key){\r\n        return makeGetCallout(Constants.SERVER_URL + '/standings', {season: key}, true);\r\n    }\r\n    \r\n    getResults(key){\r\n        return makeGetCallout(Constants.SERVER_URL + '/results', {season: key}, true);\r\n    }\r\n}\r\n\r\nfunction makeGetCallout(endpoint, params, isSecure){\r\n\r\n    return new Promise((resolve, reject) => {\r\n        \r\n        let paramString = Object.keys(params).reduce((previous, current, index) => {\r\n            return index === 0 ? '?' + current + '=' + params[current] : previous + '&' + current + '=' + params[current];\r\n        }, '?');\r\n\r\n        const url = endpoint + paramString;\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n            }\r\n        };\r\n        \r\n        // if(isSecure){\r\n        //     let token = cookieManager.getValue(Constants.COOKIE_USER_KEY);\r\n        //     if(token){\r\n        //         options.headers['x-access-token'] = cookieManager.getValue(Constants.COOKIE_USER_KEY);\r\n        //     }\r\n        // }\r\n\r\n        fetch(url, options).then(response => {\r\n            \r\n            if(response.ok){\r\n                response.clone().json().then(data => {\r\n                    console.dir(data);\r\n                    resolve(data);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                });\r\n            }else{\r\n                response.json().then((errorObj) => reject(errorObj));\r\n            }\r\n        }).catch(error => {\r\n            console.dir(error);\r\n            reject(error);\r\n        });\r\n    })\r\n}\r\n\r\nfunction makePostCallout(endpoint, body, isSecure){\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const url = endpoint;\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n        \r\n        // if(isSecure){\r\n        //     options.headers['x-access-token'] = cookieManager.getValue(Constants.COOKIE_USER_KEY);\r\n        // }\r\n\r\n        fetch(url, options).then(response => {\r\n            if(response.ok){\r\n                response.json().then(data => {\r\n                    console.dir(data);\r\n                    resolve(data);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                });\r\n\r\n            }else{\r\n                response.json().then((errorObj) => reject(errorObj));\r\n            }\r\n        }).catch(error => {\r\n            console.dir(error);\r\n            reject(error);\r\n        });\r\n    })\r\n}\r\n\r\nfunction makePatchCallout(endpoint, body, isSecure){\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const url = endpoint;\r\n        const options = {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n            },\r\n            body: JSON.stringify(body)\r\n        };\r\n        \r\n        // if(isSecure){\r\n        //     options.headers['x-access-token'] = cookieManager.getValue(Constants.COOKIE_USER_KEY);\r\n        // }\r\n\r\n        fetch(url, options).then(response => {\r\n            if(response.ok){\r\n                response.json().then(data => {\r\n                    console.dir(data);\r\n                    resolve(data);\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                    reject(error);\r\n                });\r\n\r\n            }else{\r\n                response.json().then((errorObj) => reject(errorObj));\r\n            }\r\n        }).catch(error => {\r\n            console.dir(error);\r\n            reject(error);\r\n        });\r\n    })\r\n}\r\n\r\nexport default CalloutBuilder;","import CalloutBuilder from \"./CalloutBuilder\";\r\n\r\nclass CalloutBuilderMock extends CalloutBuilder{\r\n\r\n    getLeagueData(key){\r\n        return new Promise((resolve, reject) => {\r\n            resolve ({\"data\": \"data\"})\r\n        })\r\n    }\r\n\r\n    getSchedule(key){\r\n        return new Promise((resolve, reject) => {\r\n            resolve ({\"data\": \"data\"})\r\n        })\r\n    }\r\n\r\n    getPowerRankings(key){\r\n        return new Promise((resolve, reject) => {\r\n            resolve ({\"data\": \"data\"})\r\n        })\r\n    }\r\n\r\n    getStandings(key){\r\n        return new Promise((resolve, reject) => {\r\n            resolve ({\"data\": \"data\"})\r\n        })\r\n    }\r\n\r\n    getResults(key){\r\n        return new Promise((resolve, reject) => {\r\n            resolve ({\"data\": \"data\"})\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default CalloutBuilderMock;","import CalloutBuilder from \"./CalloutBuilder\";\r\nimport CalloutBuilderMock from \"./CalloutBuilderMock\";\r\nimport Constants from '../Constants';\r\n\r\nlet calloutBuilder = Constants.MOCK_API ? new CalloutBuilderMock : new CalloutBuilder();\r\n\r\nexport function getLeagueData(key){\r\n    return calloutBuilder.getLeagueData(key);\r\n}\r\n\r\nexport function getSchedule(key){\r\n    return calloutBuilder.getSchedule(key);\r\n}\r\n\r\nexport function getPowerRankings(key){\r\n    return calloutBuilder.getPowerRankings(key);\r\n}\r\n\r\nexport function getStandings(key){\r\n    return calloutBuilder.getStandings(key);\r\n}\r\n\r\nexport function getResults(key){\r\n    return calloutBuilder.getResults(key);\r\n}\r\n\r\n","import React from \"react\";\r\nimport './Schedule.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\n\r\n\r\nclass Schedule extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.accountInfoNavRef = React.createRef();\r\n        this.state = {};\r\n\r\n        this.getScheduleScreen = this.getScheduleScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this);  \r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n    displaySchedule(){\r\n        console.log(this.props.schedule);\r\n        if(this.props.schedule){\r\n            let scheduleDisplay = this.props.schedule.map(week => {\r\n                return (<>\r\n                    <div className=\"bgl-week-container\">\r\n                        <div className=\"bgl-week-header\">{week.week + ' - ' + week.game}</div>\r\n                        <div className=\"bgl-week-subheader\">{week.dates}</div>\r\n                        <div className=\"bgl-week-table-container\">\r\n                        <table className=\"bgl-week-table\" cellPadding=\"0\" cellspacing=\"0\">\r\n                            {this.getSingleScheduleTable(week)}\r\n                        </table>\r\n                        </div>        \r\n                    </div>\r\n                </>\r\n\r\n                )\r\n            });\r\n\r\n            \r\n            return scheduleDisplay;\r\n        }\r\n\r\n        return (<div>could not load schedule</div>);\r\n    }\r\n\r\n    getSingleScheduleTable(week){\r\n        return week.results.map((group, index) => {\r\n            return (\r\n                <>\r\n                    <tr className=\"bgl-table-row player-row\">\r\n                        <td className=\"bgl-table-title-cell\">Group {index + 1}</td>\r\n                        <td className=\"bgl-table-cell\">{group[0].player}</td>\r\n                        <td className=\"bgl-table-cell\">{group[1].player}</td>\r\n                        <td className=\"bgl-table-cell\">{group[2].player}</td>\r\n                        <td className=\"bgl-table-cell\">{group[3].player}</td>\r\n                    </tr>\r\n                    <tr className=\"bgl-table-row placement-row\">\r\n                        <td className=\"bgl-table-subtitle-cell\">Placement</td>\r\n                        <td className=\"bgl-table-placement-cell\">{group[0].placement}</td>\r\n                        <td className=\"bgl-table-placement-cell\">{group[1].placement}</td>\r\n                        <td className=\"bgl-table-placement-cell\">{group[2].placement}</td>\r\n                        <td className=\"bgl-table-placement-cell\">{group[3].placement}</td>\r\n                    </tr>\r\n                </>\r\n            )\r\n        })\r\n    }\r\n\r\n    getScheduleScreen(){\r\n        if(this.props.schedule){\r\n            return (<div>{this.displaySchedule()}</div>)\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the schedule</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getScheduleScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule;\r\n","import React from \"react\";\r\nimport './Standings.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\n\r\n\r\nclass Standings extends React.Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.accountInfoNavRef = React.createRef();\r\n        this.state = {};\r\n\r\n        this.getStandingsScreen = this.getStandingsScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this);  \r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n    displayStandings(){\r\n        \r\n        if(this.props.standings){\r\n            let tableRows = this.props.standings.map((value, index) => {\r\n                return (\r\n                    <tr className=\"bgl-row\">\r\n                        <td className=\"bgl-standings-cell\">{index + 1}</td>\r\n                        <td className=\"bgl-standings-cell\">{value.player}</td>\r\n                        <td className=\"bgl-standings-cell\">{value.points}</td>\r\n                    </tr>\r\n                )\r\n            });\r\n\r\n            tableRows.unshift((<tr>\r\n                <td className=\"standings-row-header\">Position</td>\r\n                <td className=\"standings-row-header\">Player</td>\r\n                <td className=\"standings-row-header\">Points</td>\r\n            </tr>))\r\n\r\n            return (\r\n                <>\r\n                    <div className=\"power-ranking-header\">BGL Season 2 Standings</div>\r\n                    <div className=\"bgl-table-container\">\r\n                        <table className=\"bgl-table\">{tableRows}</table>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getStandingsScreen(){\r\n        if(this.props.standings){\r\n            return this.displayStandings();\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the standings</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getStandingsScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Standings;\r\n","import React from \"react\";\r\nimport './Results.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\n\r\n\r\nclass Results extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.accountInfoNavRef = React.createRef();\r\n        this.state = {};\r\n\r\n        this.getResultsScreen = this.getResultsScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this);  \r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n\r\n    getResultsScreen(){\r\n        if(this.props.results){\r\n            return (<div>Showing results table</div>)\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the results</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getResultsScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport './PowerRankings.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\n\r\n\r\nclass PowerRankings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.accountInfoNavRef = React.createRef();\r\n        this.state = {};\r\n\r\n        this.getPowerRankingsScreen = this.getPowerRankingsScreen.bind(this);\r\n        this.loadingScreen = this.loadingScreen.bind(this);  \r\n    }\r\n\r\n    componentDidMount(){\r\n    }\r\n\r\n\r\n    loadingScreen(){\r\n        return (<div className=\"loading-icon-container\"><img src={loadingIcon} alt=\"loading\"></img></div>)\r\n    }\r\n\r\n    displayPowerRankings(){\r\n        \r\n        if(this.props.powerRankings){\r\n            let tableRows = this.props.powerRankings.values.map((value, index) => {\r\n                return (\r\n                    <tr className=\"bgl-row\">\r\n                        <td className=\"bgl-power-cell\">{index + 1}</td>\r\n                        <td className=\"bgl-power-cell\">{value}</td>\r\n                    </tr>\r\n                )\r\n            });\r\n\r\n            return (\r\n                <>\r\n                    <div className=\"power-ranking-header\">BGL Power Rankings</div>\r\n                    <div className=\"bgl-table-container\">\r\n                        <table className=\"bgl-table\">{tableRows}</table>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getPowerRankingsScreen(){\r\n        if(this.props.powerRankings){\r\n            return this.displayPowerRankings();\r\n        }else if(this.props.error){\r\n            return (<div>There was an error loading the powerRankings</div>)\r\n        }else{\r\n            return this.loadingScreen();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n    \r\n        return (\r\n            <>\r\n                {this.getPowerRankingsScreen()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PowerRankings;\r\n","import React from \"react\";\r\n// import InputBox from './InputBox';\r\nimport Constants from \"./Constants\";\r\nimport './DataContainer.css';\r\nimport loadingIcon from './images/loading-icon.gif';\r\nimport {getPowerRankings, getSchedule, getStandings, getResults } from \"./callouts/CalloutFactory\";\r\nimport Schedule from \"./Schedule\";\r\nimport Standings from \"./Standings\";\r\nimport Results from \"./Results\";\r\nimport PowerRankings from \"./PowerRankings\";\r\n\r\nclass DataContainer extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n\r\n        this.displayTabsRef = React.createRef();        \r\n        this.state = {\r\n            isLoading: true,\r\n            schedule: [],\r\n            results: {},\r\n            powerRankings: {},\r\n            standings: {},\r\n            displayedScreen: 'schedule',\r\n            errors:{\r\n                schedule: null,\r\n                results: null,\r\n                powerRankings: null,\r\n                standings: null\r\n            }\r\n        };\r\n\r\n        this.loadSchedule = this.loadSchedule.bind(this);\r\n        this.loadPowerRankings = this.loadPowerRankings.bind(this);\r\n        this.loadResults = this.loadResults.bind(this);\r\n        this.loadStandings = this.loadStandings.bind(this);\r\n        this.getCurrentDisplay = this.getCurrentDisplay.bind(this);\r\n        this.toggleDisplay = this.toggleDisplay.bind(this);\r\n           \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadSchedule();\r\n        this.loadPowerRankings();\r\n        // this.loadResults();\r\n        // this.loadStandings();\r\n    }\r\n\r\n\r\n    // schedule = [\r\n    //     {\r\n    //         week: 1, \r\n    //         game: 'Imhotep', \r\n    //         dates: '1/9-1/22', \r\n    //         results: [\r\n    //             [\r\n    //                 {player: 'nick': placement: 1},\r\n    //                 {player:'michael': placement: 4},\r\n    //                 {player:'richie': placement: 2},\r\n    //                 {player:'luke': placement: 3}\r\n    //             ]\r\n                \r\n    //         ], \r\n    //         finished: true\r\n    //     }\r\n    //     {\r\n    //         week: 2,\r\n    //         game: 'TBD',\r\n    //         dates: '1/23-2/5', \r\n    //         results: [{players:, ], \r\n    //         finished: true\r\n    //     }\r\n    // ]\r\n    //static schedule (may include results here as well?)\r\n    loadSchedule(){\r\n        getSchedule().then(response => {\r\n            let schedule = this.createScheduleObject(response);\r\n            let standings = this.createStandingsObject(schedule);\r\n\r\n        }).catch(error => {\r\n            let responseError = this.state.errors;\r\n            responseError.schedule = error;\r\n            this.setState({\r\n                errors: responseError\r\n            });\r\n            if(error.code){\r\n                console.log(error.code);\r\n                console.log('Could not load schedule');\r\n            }\r\n        });\r\n    }\r\n\r\n    //static list created by admin\r\n    loadPowerRankings(){\r\n        getPowerRankings().then(response => {\r\n            this.setState({\r\n                powerRankings: response,\r\n            });\r\n        }).catch(error => {\r\n            let responseError = this.state.errors;\r\n            responseError.powerRankings = error;\r\n            this.setState({\r\n                errors: responseError\r\n            });\r\n            if(error.code){\r\n                console.log(error.code);\r\n                console.log('Could not load power rankings');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    //get 1st place - 4th place for each already played game\r\n    loadResults(){\r\n        getResults().then(response => {\r\n            this.setState({\r\n                results: response,\r\n            });\r\n        }).catch(error => {\r\n            let responseError = this.state.error;\r\n            responseError.results = error;\r\n            this.setState({\r\n                error: responseError\r\n            });\r\n            if(error.code){\r\n                console.log(error.code);\r\n                console.log('Could not load results');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    //current point totals (might not need.  Can probably just retrieve results and run logic)\r\n    loadStandings(){\r\n        getStandings().then(response => {\r\n            this.setState({\r\n                standings: response,\r\n            });\r\n        }).catch(error => {\r\n            let responseError = this.state.error;\r\n            responseError.standings = error;\r\n            this.setState({\r\n                error: responseError\r\n            });\r\n            if(error.code){\r\n                console.log(error.code);\r\n                console.log('Could not load standings');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n   createScheduleObject(response){\r\n            let numberOfGamesPerWeek = 4;\r\n            let numberOfPlayersPerGame = 4;\r\n            let infoHeaderRows = 1;\r\n            let rowsBetweenWeeksInSpreadsheet = numberOfGamesPerWeek * 2 + infoHeaderRows;\r\n            \r\n            let schedule = [];\r\n            response.values.forEach((row, rowIndex) => {\r\n                \r\n                let rowReference = rowIndex % rowsBetweenWeeksInSpreadsheet;\r\n                if(rowReference == 0){\r\n                    schedule.push({\r\n                        week: row[0], \r\n                        game: row[1], \r\n                        dates: row[2], \r\n                        results: []});\r\n                }else if(rowReference % 2 === 1){\r\n                    let placementRow = response.values[rowIndex + 1];\r\n                    let scheduleToUpdate = schedule[schedule.length - 1];\r\n                    scheduleToUpdate.results.push([]);\r\n                    for(let j = 1; j <= numberOfPlayersPerGame; j++){\r\n                        let groupToUpdate = scheduleToUpdate.results[scheduleToUpdate.results.length-1];\r\n                        let placement = placementRow[j];\r\n                        groupToUpdate.push({player: row[j], placement: placement})\r\n                    }\r\n                }\r\n            })\r\n            this.setState({\r\n                schedule: schedule,\r\n            });\r\n            return schedule;\r\n   }\r\n\r\n   createStandingsObject(schedule){\r\n        let standings = {};\r\n        schedule.forEach(week=>{\r\n            week.results.forEach(group => {\r\n                group.forEach(performance => {\r\n                    if(!standings[performance.player]){\r\n                        standings[performance.player] = 0;\r\n                    }\r\n                    if(performance.placement){\r\n                        standings[performance.player] += this.scoringRubric(performance.placement);\r\n                    }\r\n                })\r\n            })\r\n        })\r\n        \r\n        let standingsArray = Object.keys(standings).map(player => {\r\n            return {player: player, points: standings[player]};\r\n        })\r\n\r\n\r\n        standingsArray.sort((a, b) => {\r\n            if(a.points > b.points) {\r\n                return -1;\r\n            }else{\r\n                return 1;\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            standings: standingsArray\r\n        })\r\n\r\n        return standingsArray;\r\n   }\r\n\r\n   scoringRubric(placement){\r\n    if(placement == 1){\r\n        return 3;\r\n    }else if(placement == 2){\r\n        return 2;\r\n    }else if(placement == 3){\r\n        return 1;\r\n    }\r\n    return 0;\r\n   }\r\n\r\n    getCurrentDisplay(){\r\n        if(this.state.displayedScreen === 'schedule'){\r\n            return (<Schedule schedule={this.state.schedule} error={this.state.errors.schedule}></Schedule>);\r\n        } else if(this.state.displayedScreen === 'powerRankings'){\r\n            return (<PowerRankings powerRankings={this.state.powerRankings} error={this.state.errors.powerRankings}></PowerRankings>);\r\n        } else if(this.state.displayedScreen === 'results'){\r\n            return (<Results schedule={this.state.schedule} error={this.state.errors.results}></Results>);\r\n        } else if(this.state.displayedScreen === 'standings'){\r\n            return (<Standings standings={this.state.standings} error={this.state.errors.standings}></Standings>);\r\n        } else {\r\n            return (<Schedule schedule={this.state.schedule} error={this.state.errors.schedule}></Schedule>);\r\n        }\r\n            \r\n    }\r\n\r\n    toggleDisplay(event){\r\n        let buttonName = event.target.dataset.name;\r\n        this.setState({\r\n            displayedScreen: buttonName\r\n        })\r\n        let displayTabs = this.displayTabsRef.current.querySelectorAll('.toggle-button');\r\n        displayTabs.forEach((tab) => {\r\n            if(tab.className.includes(' active')){\r\n                tab.className = tab.className.replace(' active', '');\r\n            }\r\n      \r\n            if(tab.dataset.name === buttonName){\r\n                tab.className += ' active';\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <>\r\n            <div className=\"bgl-header\">Board Game League</div>\r\n            <div className=\"display-tabs\" ref={this.displayTabsRef}>\r\n                <div data-name=\"schedule\" className=\"toggle-button active\" onClick={this.toggleDisplay}>Schedule</div>\r\n                <div data-name=\"standings\" className=\"toggle-button\" onClick={this.toggleDisplay}>Standings</div>\r\n                <div data-name=\"powerRankings\" className=\"toggle-button\" onClick={this.toggleDisplay}>Power Rankings</div>\r\n            </div>\r\n            {this.getCurrentDisplay()}                \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataContainer;\r\n","import React from \"react\";\r\nimport './App.css';\r\n// import AppContainer from \"./create/AppContainer\";\r\n//import { BrowserRouter as Router,Routes, Route, Link } from 'react-router-dom';\r\n// import ViewOnlyAppContainer from \"./view/ViewOnlyAppContainer\";\r\n// import VerifyEmailContainer from \"./verifyEmail/VerifyEmailContainer\";\r\n// import LandingNav from \"./landing/LandingNavigation\";\r\nimport DataContainer from \"./DataContainer\";\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n\r\n  }\r\n\r\n  render(){\r\n \r\n    return (\r\n    <>\r\n    \r\n    <head>\r\n          <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'/>\r\n          <meta charset=\"utf-8\"/>\r\n          <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\r\n          <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0'/>\r\n          <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\"/>\r\n          <link href='https://fonts.googleapis.com/css?family=Holtwood+One+SC' rel='stylesheet' type='text/css'/>\r\n          <link href='https://fonts.googleapis.com/css?family=Kaushan+Script|Herr+Von+Muellerhoff' rel='stylesheet' type='text/css'/>\r\n          <link href='https://fonts.googleapis.com/css?family=Abel' rel='stylesheet' type='text/css'/>\r\n          <link href='https://fonts.googleapis.com/css?family=Istok+Web|Roboto+Condensed:700' rel='stylesheet' type='text/css'/>\r\n            \r\n          <title>Board Game League</title>\r\n        </head>\r\n        \r\n        {/* <Router> */}\r\n           <div className=\"App main-container\">\r\n            <DataContainer></DataContainer>\r\n           {/* <Routes>\r\n                 <Route exact path='/' element={<LandingNav/>}></Route>\r\n                 <Route exact path='/view' element={< ViewOnlyAppContainer />}></Route>\r\n                 <Route exact path='/create' element={< AppContainer />}></Route>\r\n                 <Route exact path='/verify-email' element={< VerifyEmailContainer />}></Route>\r\n          </Routes> */}\r\n          </div>\r\n       {/* </Router> */}\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}